<%- include('header') %>
<nav class="navbar navbar-expand-lg navbar-dark shadow-sm">
    <div class="container">
      <a href="#" class="navbar-brand">Admin Dashboard</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mx-auto">
          <li class="nav-item"><a href="/admin/dashboard" class="nav-link">Dashboard</a></li>
          <li class="nav-item"><a href="/admin/users" class="nav-link">Users</a></li>
          <li class="nav-item"><a href="/admin/categories" class="nav-link">Categories</a></li>
          <li class="nav-item"><a href="/admin/product" class="nav-link">Products</a></li>
          <li class="nav-item"><a href="/admin/orders" class="nav-link">Orders</a></li>
          <li class="nav-item"><a href="/admin/coupons" class="nav-link">Coupons</a></li>
          <li class="nav-item"><a href="/admin/productoffers" class="nav-link">Product Offer</a></li>
          <li class="nav-item"><a href="/admin/categoryoffers" class="nav-link">Category Offer</a></li>
        </ul>
        <a href="/admin/logout" class="btn btn-outline-danger fw-bold">Logout</a>
      </div>
    </div>
  </nav>
    <div class="container">
        <h2>Order Management</h2>
        <table>
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Name</th>
                    <th>Total Amount</th>
                    <th>Payment Method</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                    <tr>
                        <td><%= order._id %></td>
                        <td><%= order.userName %></td>
                        <td>â‚¹<%= order.totalAmount.toFixed(2) %></td>
                        <td><%= order.paymentMethod %></td>
                        <td>
                            <select class="status-dropdown" data-order-id="<%= order._id %>">
                                <option disabled selected>Change the Status</option> <!-- Fixed the default option -->
                                <option value="Ordered" <%= order.orderStatus === 'Ordered' ? 'selected' : '' %>>Ordered</option>
                                <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="Cancelled" <%= order.orderStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                <option value="Returned" <%= order.orderStatus === 'Returned' ? 'selected' : '' %>>Returned</option>
                            </select>
                        </td>
                        <td>
                            <button class="view-btn" onclick="window.location.href='/admin/orders/view/<%= order._id %>'">View</button>
                        </td>                        
                    </tr>
                <% }) %>
            </tbody>
        </table>

        <!-- Pagination -->
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>">Previous</a>
            <% } %>
            <span>Page <%= currentPage %> of <%= totalPages %></span>
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>">Next</a>
            <% } %>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        document.querySelectorAll('.status-dropdown').forEach(select => {
    select.addEventListener('change', function() {
        const orderId = this.dataset.orderId; // Correctly getting order ID
        const newStatus = this.value;

        if (!orderId || !newStatus) {
            showToast("Invalid order ID or status.", "error");
            return;
        }

        fetch(`/admin/orders/update-status/${orderId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ status: newStatus })
        })
        .then(response => response.json())
        .then(data => {
            if (data.message) {
                showToast(data.message, "success");
            } else {
                showToast("Error updating status.", "error");
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast("Network error. Try again!", "error");
        });
    });
});

function showToast(message, type) {
    const toast = Toastify({
        text: message,
        duration: 3000, // Toast disappears after 3 seconds
        close: true,
        gravity: "top",
        position: "right",
        backgroundColor: type === "success" ? "green" : "red",
        onClick: function() {}, // Required to keep the toast open on hover
    }).showToast();

    // Create a progress bar
    const toastElement = document.querySelector(".toastify"); // Get the toast element
    if (toastElement) {
        const progressBar = document.createElement("div");
        progressBar.style.position = "absolute";
        progressBar.style.bottom = "0";
        progressBar.style.left = "0";
        progressBar.style.height = "4px";
        progressBar.style.background = "#90EE90";
        progressBar.style.width = "100%";
        progressBar.style.transition = "width 3s linear"; // Animation for the progress bar
        
        toastElement.appendChild(progressBar);

        // Reduce the width over time
        setTimeout(() => {
            progressBar.style.width = "0%";
        }, 50);
    }
}
    </script>
</body>
</html>
