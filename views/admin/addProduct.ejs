<%- include('header') %>
<nav class="navbar navbar-expand-lg navbar-dark shadow-sm">
  <div class="container">
    <a href="#" class="navbar-brand">Admin Dashboard</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav mx-auto">
        <li class="nav-item"><a href="/admin/dashboard" class="nav-link">Dashboard</a></li>
        <li class="nav-item"><a href="/admin/users" class="nav-link">Users</a></li>
        <li class="nav-item"><a href="/admin/categories" class="nav-link">Categories</a></li>
        <li class="nav-item"><a href="/admin/product" class="nav-link">Products</a></li>
        <li class="nav-item"><a href="/admin/orders" class="nav-link">Orders</a></li>
        <li class="nav-item"><a href="/admin/coupons" class="nav-link">Coupons</a></li>
        <li class="nav-item"><a href="/admin/product-offers" class="nav-link">Offers</a></li>
      </ul>
      <a href="/admin/logout" class="btn btn-outline-danger fw-bold">Logout</a>
    </div>
  </div>
</nav>

<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card shadow-lg rounded-3">
        <div class="card-header header-custom text-center mb-2">
          <h3>Add Product</h3>
        </div>      
        <div class="card-body">
          <form action="/admin/addproduct" method="POST" enctype="multipart/form-data" id="productForm" onsubmit="handleProductSubmit(event)">
            <div class="mb-3">
              <label for="productname" class="form-label">Product Name</label>
              <input type="text" id="productname" name="name" class="form-control" placeholder="Enter Product name" />
              <span id="productnameError" class="error"></span>
            </div>
                      
            <div class="mb-3">
              <label for="category" class="form-label">Product Category</label>
              <select id="category" name="category" class="form-select" required>
                <option value="" disabled>Select category</option>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>" 
                          <%= product && product.category.toString() === category._id.toString() ? 'selected' : '' %>>
                    <%= category.name %>
                  </option>
                <% }); %>
              </select>
            </div>
            
            <div class="mb-3">
              <label for="price" class="form-label">Product Price</label>
              <input type="number" id="price" name="price" class="form-control" placeholder="Enter product price" min="1"  />
              <span id="priceError" class="error"></span>
            </div>
            <div class="mb-3">
              <label for="offerPrice" class="form-label">Offer Price</label>
              <input type="number" class="form-control" name="offerPrice" id="offerPrice" min="0" step="0.01" placeholder="Enter offer price" />
              <span id="offerPriceError" class="error"></span>
            </div>
            <div class="mb-3">
              <label for="description" class="form-label">Product Description</label>
              <textarea id="description" name="description" class="form-control" placeholder="Enter product description" rows="4" ></textarea>
              <span id="descriptionError" class="error"></span>
            </div>
            <div class="mb-3">
              <label for="quantity" class="form-label">Product Quantity</label>
              <div class="input-group">
                <!-- Pre-fill quantity with the existing product quantity -->
                <input type="number" id="quantity" name="quantity" class="form-control" placeholder="Enter quantity" min="0.1" step="0.1" value="<%= quantity %>" />
                
                <select id="unit" name="unit" class="form-select">
                  <!-- Set the selected option to the existing product unit -->
                  <option value="gm" <%= unit === 'gm' ? 'selected' : '' %>>gm</option>
                  <option value="kg" <%= unit === 'kg' ? 'selected' : '' %>>kg</option>
                  <option value="ml" <%= unit === 'ml' ? 'selected' : '' %>>ml</option>
                  <option value="litre" <%= unit === 'litre' ? 'selected' : '' %>>litre</option>
                </select>
              </div>
              <span id="quantityError" class="error"></span>
            </div>            
            <div class="mb-3">
              <label for="stock" class="form-label">Number of Stock</label>
              <input type="number" id="stock" name="stock" class="form-control" placeholder="Enter number of stock" min="1"  />
              <span id="stockError" class="error"></span>
            </div>
            
            <div class="container mt-4">
              <label for="images" class="form-label">Upload Images</label>
              <input type="file" id="images" name="images" class="form-control" multiple accept="image/*" onchange="previewImages()">
              <div id="previewContainer" class="d-flex gap-2 flex-wrap mt-2"></div>
            </div>            
            </div>
            <div class="d-grid">
              <button type="submit" class="btn btn-custom">Add Product</button>
            </div>
          </form>
        </div>

        <div class="card-footer text-center">
          <a href="/admin/product" class="btn btn-outline-secondary">Back to Products</a>
        </div>
      </div>
    </div>
  </div>
</div>
  <!-- Load Toastify before using it -->
  <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

  <% if (error) { %>
    <script>
      window.onload = function() {
        Toastify({
          text: "<%= error %>",
          duration: 3000,  
          close: true,
          gravity: "top",
          position: "right",
          backgroundColor: "red",  
        }).showToast();
      };
    </script>
  <% } %>
  <!-- Toastify JS -->
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/cropper.min.js"></script>
<script>
  function previewImages() {
    const previewContainer = document.getElementById('previewContainer');
    previewContainer.innerHTML = ''; // Clear previous previews
    const files = document.getElementById('images').files;
    
    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      const reader = new FileReader();
      
      reader.onload = function (e) {
        const imgElement = document.createElement('img');
        imgElement.src = e.target.result;
        imgElement.classList.add('img-thumbnail', 'm-2');
        imgElement.style.width = '100px'; 
        imgElement.style.cursor = 'pointer';
        imgElement.setAttribute('data-index', i);
        imgElement.onclick = () => replaceImage(i);
        
        const removeButton = document.createElement('button');
        removeButton.textContent = 'Remove';
        removeButton.classList.add('btn', 'btn-danger', 'btn-sm', 'mt-1');
        removeButton.onclick = () => removeImage(i);
        
        const imageContainer = document.createElement('div');
        imageContainer.classList.add('d-flex', 'flex-column', 'align-items-center');
        imageContainer.appendChild(imgElement);
        imageContainer.appendChild(removeButton);
        
        previewContainer.appendChild(imageContainer);
      };
      reader.readAsDataURL(file);
    }
  }

  function removeImage(index) {
    const files = document.getElementById('images').files;
    const dt = new DataTransfer(); // Create a new DataTransfer object to manipulate the file list

    for (let i = 0; i < files.length; i++) {
      if (i !== index) {
        dt.items.add(files[i]); // Keep only non-deleted files
      }
    }

    document.getElementById('images').files = dt.files; // Update input
    previewImages(); // Refresh preview
  }

  function replaceImage(index) {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = 'image/*';
    
    input.onchange = function (event) {
      const newFile = event.target.files[0];
      if (newFile) {
        const files = document.getElementById('images').files;
        const dt = new DataTransfer();

        for (let i = 0; i < files.length; i++) {
          if (i === index) {
            dt.items.add(newFile); // Replace the selected file
          } else {
            dt.items.add(files[i]); // Keep others unchanged
          }
        }

        document.getElementById('images').files = dt.files; // Update file input
        previewImages(); // Refresh preview
      }
    };
    
    input.click(); // Trigger file selection
  }
</script> 
<script>
function handleProductSubmit (event) {
  event.preventDefault();
    const Name = document.getElementById("productname").value.trim();
    const Price = document.getElementById("price").value.trim();
    const Offer = document.getElementById("offerPrice").value.trim();
    const Description = document.getElementById("description").value.trim();
    const Stock = document.getElementById("stock").value.trim();

    const productnameError = document.getElementById("productnameError");
    const priceError = document.getElementById("priceError");
    const offerError = document.getElementById("offerPriceError");
    const descriptionError = document.getElementById("descriptionError");
    const stockError = document.getElementById("stockError");

    productnameError.textContent = "";
    priceError.textContent = "";
    offerError.textContent = "";
    descriptionError.textContent = "";
    stockError.textContent = "";

    let isValid = true;

    if (Name === "") {
        productnameError.textContent = "Product name is required.";
        productnameError.style.color = "red";
        isValid = false;
    }
    if (Price === "" || isNaN(Price) || Price <= 0) {
        priceError.textContent = "Valid price is required.";
        priceError.style.color = "red";
        isValid = false;
    }
    if (Offer === "" || Offer < 0 ) {
        offerError.textContent = "Offer price should be min 0";
        offerError.style.color = "red";
        isValid = false;
    }
    if (Description === "") {
        descriptionError.textContent = "Description is required.";
        descriptionError.style.color = "red";
        isValid = false;
    }
    if (Stock === "" || isNaN(Stock) || Stock < 1) {
        stockError.textContent = "Stock must be at least 1.";
        stockError.style.color = "red";
        isValid = false;
    }
    // Submit form if all fields are valid
    if (isValid) {
      document.getElementById("productForm").submit();
    }
}
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<%- include('footer') %>
