<%- include('header') %>
<nav class="navbar navbar-expand-lg navbar-dark shadow-sm">
  <div class="container">
    <a href="#" class="navbar-brand">Admin Dashboard</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav mx-auto">
        <li class="nav-item"><a href="/admin/dashboard" class="nav-link">Dashboard</a></li>
        <li class="nav-item"><a href="/admin/users" class="nav-link">Users</a></li>
        <li class="nav-item"><a href="/admin/categories" class="nav-link">Categories</a></li>
        <li class="nav-item"><a href="/admin/product" class="nav-link">Products</a></li>
        <li class="nav-item"><a href="/admin/orders" class="nav-link">Orders</a></li>
        <li class="nav-item"><a href="/admin/coupons" class="nav-link">Coupons</a></li>
        <li class="nav-item"><a href="/admin/categoryoffers" class="nav-link">Category Offer</a></li>
        <li class="nav-item"><a href="/admin/salesReport" class="nav-link">Sales Report</a></li>
      </ul>
      <a href="/admin/logout" class="btn btn-outline-danger fw-bold">Logout</a>
    </div>
  </div>
</nav>

<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card shadow-lg rounded-3">
        <div class="card-header header-custom text-center mb-2">
          <h3>Add Product</h3>
        </div>      
        <div class="card-body">
          <form action="/admin/addproduct" method="POST" enctype="multipart/form-data" id="productForm" onsubmit="handleProductSubmit(event)">
            <div class="mb-3">
              <label for="productname" class="form-label">Product Name</label>
              <input type="text" id="productname" name="name" class="form-control" placeholder="Enter Product name" />
              <span id="productnameError" class="error"></span>
            </div>
                      
            <div class="mb-3">
              <label for="category" class="form-label">Product Category</label>
              <select id="category" name="category" class="form-select" required>
                <option value="" disabled>Select category</option>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>" 
                          <%= product && product.category.toString() === category._id.toString() ? 'selected' : '' %>>
                    <%= category.name %>
                  </option>
                <% }); %>
              </select>
            </div>
            
            <div class="mb-3">
              <label for="price" class="form-label">Product Price</label>
              <input type="number" id="price" name="price" class="form-control" placeholder="Enter product price" min="1"  />
              <span id="priceError" class="error"></span>
            </div>
            <div class="mb-3">
              <label for="offerPrice" class="form-label">Offer Price</label>
              <input type="number" class="form-control" name="offerPrice" id="offerPrice" min="0" step="0.01" placeholder="Enter offer price" />
              <span id="offerPriceError" class="error"></span>
            </div>
            <div class="mb-3">
              <label for="description" class="form-label">Product Description</label>
              <textarea id="description" name="description" class="form-control" placeholder="Enter product description" rows="4" ></textarea>
              <span id="descriptionError" class="error"></span>
            </div>
            <div class="mb-3">
              <label for="quantity" class="form-label">Product Quantity</label>
              <div class="input-group">
                <!-- Pre-fill quantity with the existing product quantity -->
                <input type="number" id="quantity" name="quantity" class="form-control" placeholder="Enter quantity" min="0.1" step="0.1" value="<%= quantity %>" />
                
                <select id="unit" name="unit" class="form-select">
                  <!-- Set the selected option to the existing product unit -->
                  <option value="gm" <%= unit === 'gm' ? 'selected' : '' %>>gm</option>
                  <option value="kg" <%= unit === 'kg' ? 'selected' : '' %>>kg</option>
                  <option value="ml" <%= unit === 'ml' ? 'selected' : '' %>>ml</option>
                  <option value="litre" <%= unit === 'litre' ? 'selected' : '' %>>litre</option>
                </select>
              </div>
              <span id="quantityError" class="error"></span>
            </div>            
            <div class="mb-3">
              <label for="stock" class="form-label">Number of Stock</label>
              <input type="number" id="stock" name="stock" class="form-control" placeholder="Enter number of stock" min="1"  />
              <span id="stockError" class="error"></span>
            </div>
            
            <!-- Cropping Modal -->
            <div class="form-group">
              <label for="images">Add Image</label>
              <input type="file" accept="image/*" name="images" class="form-control-file" id="images" multiple />
              <!-- Original Image Preview Before Cropping -->
<div id="image-preview" class="preview-container"></div>

<!-- Cropped Images Preview -->
<div id="cropped-images-preview" class="preview-container"></div>
            </div>            
              
            </div>
            <div class="d-grid">
              <button type="submit" class="btn btn-custom">Add Product</button>
            </div>
          </form>
        </div>

        <div class="card-footer text-center">
          <a href="/admin/product" class="btn btn-outline-secondary">Back to Products</a>
        </div>
      </div>
    </div>
  </div>
</div>
  <!-- Load Toastify before using it -->
  <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

  <% if (error) { %>
    <script>
      window.onload = function() {
        Toastify({
          text: "<%= error %>",
          duration: 3000,  
          close: true,
          gravity: "top",
          position: "right",
          backgroundColor: "red",  
        }).showToast();
      };
    </script>
  <% } %>
  <!-- Toastify JS -->
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<!-- Cropper.js CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet" />

<!-- Cropper.js JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  const croppedImages = []; // Store only cropped images

function previewImages() {
    var preview = document.getElementById("image-preview");
    preview.innerHTML = ""; // Clear previous preview

    var files = document.getElementById("images").files;
    for (var i = 0; i < files.length; i++) {
        var file = files[i];
        var reader = new FileReader();

        reader.onload = function (event) {
            var img = document.createElement("img");
            var div = document.createElement("div");
            div.className = "crop-img-container";
            img.className = "canvas-image";
            img.src = event.target.result;
            div.appendChild(img);
            preview.appendChild(div);

            // Initialize cropper for the image
            initializeCropper(img, div);
        };

        reader.readAsDataURL(file);
    }
}

function initializeCropper(image, container) {
    image.onload = function () {
        var cropper = new Cropper(image, {
            aspectRatio: NaN,
            viewMode: 1, 
            autoCropArea: 1,
            cropBoxResizable: true,
            preview: ".preview",
        });

        var cropButton = document.createElement("button");
        cropButton.className = "btn btn-primary";
        cropButton.innerText = "Crop";

        cropButton.addEventListener("click", function (event) {
            event.preventDefault();
            cropper.getCroppedCanvas().toBlob(function (blob) {
                var croppedFile = new File([blob], "cropped-image.jpg", { type: "image/jpeg" });
                croppedImages.push(croppedFile); // Store cropped image

                // Remove the original image after cropping
                container.remove();

                // Show the cropped image preview
                var previewContainer = document.getElementById("cropped-images-preview");
                var previewImage = document.createElement("img");
                var deleteButton = document.createElement("button");

                previewImage.className = "preview-image";
                previewImage.src = URL.createObjectURL(blob);

                deleteButton.textContent = "Drop";
                deleteButton.className = "btn btn-sm btn-danger";
                deleteButton.style.marginTop = "10px";

                deleteButton.addEventListener("click", () => {
                    previewImage.remove();
                    deleteButton.remove();
                    const index = croppedImages.indexOf(croppedFile);
                    if (index !== -1) {
                        croppedImages.splice(index, 1);
                    }
                });

                previewContainer.appendChild(previewImage);
                previewContainer.appendChild(deleteButton);
            });
        });

        container.appendChild(cropButton);
    };
}

// Attach the previewImages function to the change event of the file input
document.getElementById("images").addEventListener("change", previewImages);

// Modify the form submission to send only cropped images
document.querySelector("form").addEventListener("submit", function (event) {
    event.preventDefault();
    var formData = new FormData();
    // ✅ Collect text fields manually
    formData.append("name", document.getElementById("productname").value);
    formData.append("description", document.getElementById("description").value);
    formData.append("price", document.getElementById("price").value);
    formData.append("category", document.getElementById("category").value);
    formData.append("stock", document.getElementById("stock").value);
    formData.append("offerPrice", document.getElementById("offerPrice").value);
    formData.append("quantity", document.getElementById("quantity").value);
    formData.append("unit", document.getElementById("unit").value);
    if (croppedImages.length < 3) {
        alert("You must upload at least 3 cropped images.");
        return;
    }

    croppedImages.forEach((image, index) => {
        formData.append("images", image, `cropped-image-${index + 1}.jpg`);
    });

    // Send the cropped images to the backend
    fetch("/admin/addProduct", {
        method: "POST",
        body: formData,
    })
    .then(response => {
        if (response.ok) {
            window.location.href = "/admin/product"; 
        } else {
            console.error("Upload failed");
        }
    })
    .catch(error => console.error("Error:", error));
});
  </script>

<%- include('footer') %>
