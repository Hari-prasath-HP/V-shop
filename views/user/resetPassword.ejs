<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Set New Password | V-Shop</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #fbbf3b, #eb543b);
            height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            font-family: 'Poppins', sans-serif;
            margin: 0;
        }
        .password-container {
            background: rgba(255, 255, 255, 0.9);
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.2);
            max-width: 450px;
            width: 100%;
            animation: fadeIn 1s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .password-container h2 {
            color: #333;
            font-weight: 700;
            margin-bottom: 20px;
            text-align: center;
        }
        .password-container p {
            color: #666;
            margin-bottom: 30px;
            text-align: center;
        }
        .form-control {
            border-radius: 10px;
            padding: 12px;
            border: 1px solid #ddd;
            transition: all 0.3s ease;
        }
        .form-control:focus {
            border-color: #eb543b;
            box-shadow: 0 0 8px rgba(235, 84, 59, 0.3);
        }
        .btn-custom {
            background: linear-gradient(45deg, #eb543b, #fbbf3b);
            color: white;
            border: none;
            padding: 12px;
            border-radius: 10px;
            font-weight: 600;
            transition: all 0.3s ease;
            width: 100%;
        }
        .btn-custom:hover {
            background: linear-gradient(45deg, #fbbf3b, #eb543b);
            transform: translateY(-2px);
        }
        .error {
            color: red;
            font-size: 0.9rem;
            margin-top: 5px;
        }
        header {
            width: 100%;
            padding: 15px 0;
            text-align: center;
            position: fixed;
            top: 0;
            z-index: 1000;
        }
        header h1 {
            color: white;
            margin: 0;
            font-size: 1.8rem;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        }
    </style>
</head>
<body>
    <header>
        <h1>V-Shop</h1>
    </header>
    <div class="container d-flex justify-content-center align-items-center flex-grow-1">
        <div class="password-container">
            <h2>Set New Password</h2>
            <p>Enter your new password and confirm it</p>
            <form id="newPasswordForm" action="/set-new-password" method="post" onsubmit="validatePassword(event)">
                <input type="hidden" id="email" name="email" value="<%= email %>" />
            
                <div class="mb-3">
                    <label for="newPassword" class="form-label">New Password:</label>
                    <input type="password" id="newPassword" name="newPassword" class="form-control" placeholder="Enter new password">
                    <span id="newPasswordError" class="error"></span>
                </div>
            
                <div class="mb-3">
                    <label for="confirmPassword" class="form-label">Confirm Password:</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" placeholder="Confirm new password">
                    <span id="confirmPasswordError" class="error"></span>
                </div>
            
                <button type="submit" class="btn btn-custom">Submit</button>
            </form>          
        </div>
    </div>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script>
        function showToast(message, isSuccess) {
    Toastify({
        text: message,
        duration: 3000,
        close: true,
        gravity: "top",
        position: "right",
        backgroundColor: isSuccess ? "lightgreen" : "lightcoral",
        stopOnFocus: true,
    }).showToast();
}

function validatePassword(event) {
    event.preventDefault();
    
    const newPassword = document.getElementById("newPassword").value.trim();
    const confirmPassword = document.getElementById("confirmPassword").value.trim();
    const email = document.getElementById("email").value.trim();
    const newPasswordError = document.getElementById("newPasswordError");
    const confirmPasswordError = document.getElementById("confirmPasswordError");

    // Clear previous errors
    newPasswordError.textContent = "";
    confirmPasswordError.textContent = "";

    // Regular expression for strong password: At least one uppercase, one number, one special character, and at least 8 characters long
    const passwordPattern = /^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

    if (!newPassword) {
        newPasswordError.textContent = "New Password is required.";
        return;
    }
    if (!passwordPattern.test(newPassword)) {
        newPasswordError.textContent = "Password must be at least 8 characters long, contain an uppercase letter, a number, and a special character.";
        return;
    }
    if (!confirmPassword) {
        confirmPasswordError.textContent = "Confirm Password is required.";
        return;
    }
    if (newPassword !== confirmPassword) {
        confirmPasswordError.textContent = "Passwords do not match.";
        return;
    }

    // Submit the form data to the server
    fetch("/set-new-password", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, newPassword })
    })
    .then(response => response.json())
    .then(data => {
        showToast(data.message, data.success); // Show toast message from backend

        if (data.success) {
            setTimeout(() => {
                window.location.href = "/login"; // Redirect to login page after 3 seconds
            }, 3000);
        }
    })
    .catch(error => {
        console.error("Error updating password:", error);
        showToast("An error occurred. Please try again.", false);
    });
}
</script>
</body>
</html>