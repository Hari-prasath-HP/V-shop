<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart Page</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .cart-container {
            margin: 20px auto;
            max-width: 90%;
        }

        .cart-table {
            width: 100%;
            border-collapse: collapse;
        }

        .cart-table th, .cart-table td {
            padding: 12px;
            border-bottom: 1px solid #ddd;
            text-align: center;
            vertical-align: middle;
        }

        .cart-table th {
            background-color: #f8f9fa;
            font-weight: bold;
        }

        .cart-image {
            width: 60px;
            height: 60px;
            object-fit: cover;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 5px;
            height: 90px;
        }

        .quantity-control input {
            width: 50px;
            text-align: center;
            border: none;
            background: transparent;
        }
                .quantity-control button {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
        }
        .checkout-btn {
            display: flex;
            justify-content: flex-end;
            margin-top: 10px;
        }
    </style>
</head>

<body>
    <section class="bg-light py-3">
        <div class="container">
            <h2 class="text-center">Your Cart</h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb justify-content-center">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Cart</li>
                </ol>
            </nav>
        </div>
    </section>

    <div class="container cart-container">
        <table class="cart-table">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Sub Total</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody id="cartBody">
                <% let grandTotal = 0; %>
                <% cart.forEach(function(item) { %>
                    <% let subTotal = item.price * item.quantity; %>
                    <% grandTotal += subTotal; %>
                    <tr data-id="<%= item.productId %>" data-price="<%= item.price %>" data-stock="<%= item.stock %>">
                        <td><img src="/uploads/products/<%= item.image %>" class="cart-image" alt="<%= item.name %>"></td>
                        <td><%= item.name %></td>
                        <td>₹<%= item.price %></td>
                        <td class="quantity-control">
                            <button class="btn btn-sm btn-primary decrease">-</button>
                            <input type="text" class="product-quantity" value="<%= item.quantity %>" readonly>
                            <button class="btn btn-sm btn-primary increase">+</button>
                        </td>                        
                        <td class="subTotal">₹<%= subTotal.toFixed(2) %></td>
                        <td>
                            <a href="/remove/<%= item.productId %>" class="btn btn-sm btn-danger">
                              Remove
                            </a>
                          </td>
                    </tr>
                <% }); %>
                <tr class="total-row">
                    <td colspan="4" class="text-end">Grand Total:</td>
                    <td colspan="2" id="grandTotal">₹<%= grandTotal.toFixed(2) %></td>
                </tr>
            </tbody>
        </table>
        <div class="checkout-btn">
            <a href="/checkout" class="btn btn-primary">Proceed to Checkout</a>
        </div>
    </div>

    <script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".quantity-control button").forEach(button => {
        button.addEventListener("click", async function () {
            let row = this.closest("tr");
            let productId = row.getAttribute("data-id"); // Ensure this is correctly set in HTML
            let price = parseFloat(row.getAttribute("data-price"));
            let stock = parseInt(row.getAttribute("data-stock"));
            let quantityInput = row.querySelector(".product-quantity");
            let subTotalElement = row.querySelector(".subTotal");
            let action = this.classList.contains("increase") ? "add" : "reduce";
            let currentQuantity = parseInt(quantityInput.value);

            // Prevent invalid quantity changes
            if (action === "add" && currentQuantity >= stock) {
                Swal.fire("Error", "Stock limit reached!", "warning");
                return;
            } else if (action === "reduce" && currentQuantity <= 1) {
                return;
            }

            let newQuantity = action === "add" ? currentQuantity + 1 : currentQuantity - 1;

            try {
                let response = await fetch("/update-quantity", {  // Fixed endpoint
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ cartItemId: productId, quantity: newQuantity }),
                });

                let data = await response.json();
                if (response.ok && data.success) {
                    // Update UI only if the backend update is successful
                    quantityInput.value = data.updatedQuantity;
                    subTotalElement.textContent = `₹${data.updatedSubTotal}`;
                    updateGrandTotal();
                } else {
                    Swal.fire("Error", data.message || "Failed to update quantity", "error");
                    quantityInput.value = currentQuantity; // Revert on failure
                }
            } catch (error) {
                console.error("Error updating quantity:", error);
                Swal.fire("Error", "Something went wrong!", "error");
                quantityInput.value = currentQuantity; // Revert on failure
            }
        });
    });

    function updateGrandTotal() {
        let total = 0;
        document.querySelectorAll(".subTotal").forEach(subTotal => {
            total += parseFloat(subTotal.textContent.replace("₹", ""));
        });
        document.getElementById("grandTotal").textContent = `₹${total.toFixed(2)}`;
    }
});

    </script>
</body>

</html>
